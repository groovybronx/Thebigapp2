services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app_network

  mongoexpress:
    image: mongo-express:latest
    container_name: mongoexpress
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME: root
      - ME_CONFIG_MONGODB_ADMINPASSWORD: example
    networks:
      - app_network

  binance-backend:
    build:
      context: ../Binance/backend
      dockerfile: Dockerfile
    container_name: binance-backend
    env_file: .env
    ports:
      - "5000:5000"
    volumes:
       - backend_vol:/app
    networks:
      - app_network
    depends_on:
      - mongodb

  binance-frontend:
    build:
      context: ../Binance/frontend
      dockerfile: Dockerfile
    container_name: binance-frontend
    ports:
      - "3000:3000"
    volumes:
      - ../Binance/frontend:/app
    command: ["npm", "start"]
    networks:
      - binance-network
    depends_on:
      - binance-backend

networks:
  app_network:
    driver: bridge


volumes:
  mongodb_data:


# backend service
environment:
  - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
  - MONGO_URI=${MONGO_URI}

